@model InventarioHTML.Models.Encargado

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title text-primary-d3" id="exampleModalLabel">
                Gestión Encargado
            </h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
            </button>
        </div>
        <form method="post" action="/Encargados/SaveEncargado">
            <div class="modal-body">
                @Html.HiddenFor(model => model.id_encargado)
                <div class="form-group row">
                    <label class="control-label col-md-2">Nombre:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Apellido:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Telefono:</label>
                    <div class="col-md-10">
                        <input type="number" pattern=" 0+\.[0-9]*[1-9][0-9]*$" name="itemConsumption" onkeypress="return event.charCode >= 48 && event.charCode <= 57"
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Rut:</label>
                    <div class="col-md-10">
                        <input type="text" id="rut" name=" rut" required oninput="checkRut(this)"
                        @Html.EditorFor(model => model.rut, new { htmlAttributes = new { @class = "form-control" } })
                        <script src="validarRUT.js"></script>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Correo:</label>
                    <div class="col-md-10">
                        <input type="email"
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Contraseña:</label>
                    <div class="col-md-10">
                        <input type="password"
                               @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control", InputType.Password } })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="control-label col-md-2">Rol:</label>
                    <div class="col-md-10">
                        @Html.DropDownList("id_rol", null, "Seleccione Rol", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary px-4" data-dismiss="modal">
                    Cerrar
                </button>

                <button type="submit" class="btn btn-primary" id="btnGuardar">
                    Guardar
                </button>
            </div>
        </form>
    </div>
</div>
<script src="~/Scripts/sweetalert.min.js"></script>
<script>
    $('#btnGuardar').click(function (e) {
        let error = '';
        if ($('#nombre').val().trim() == '')
            error = 'Debe ingresar un nombre \n';
        if ($('#apellido').val().trim() == '')
            error += 'Debe ingresar un apellido \n';
        if ($('#telefono').val().trim() == '')
            error += 'Debe ingresar un n° telefonico \n';
        if ($('#rut').val().trim() == '')
            error += 'Debe ingresar el rut del encargado \n';
        if ($('#correo').val().trim() == '')
            error += 'Debe ingresar un correo electronico \n';
        if ($('#contraseña').val().trim() == '')
            error += 'Debe ingresar una contraseña \n';
        if ($('#id_rol').val() == '')
            error += 'Debe seleccionar un rol';
        if (error != '') {
            swal('Error de validación', error, 'error');
            
            e.preventDefault();
        }
    });
    $('#rut').blur(function () {
        if ($('#rut').val().trim() != '') {
            $.get('/Encargados/VerificarRut?rut' + $('#rut').val().trim(), function (result) {
                if (result != '')
                    swal(result, '', 'warning');
            });
        }
    });
    function checkRut(rut) {

        var valor = rut.value.replace('.', '');

        valor = valor.replace('-', '');

        cuerpo = valor.slice(0, -1);

        dv = valor.slice(-1).toUpperCase();

        rut.value = cuerpo + '-' + dv

        if (cuerpo.length < 7) { rut.setCustomValidity("RUT Incompleto"); return false; }

        suma = 0;
        multiplo = 2;

        for (i = 1; i <= cuerpo.length; i++) {

            index = multiplo * valor.charAt(cuerpo.length - i);

            suma = suma + index;

            if (multiplo < 7) { multiplo = multiplo + 1; } else { multiplo = 2; }

        }

        dvEsperado = 11 - (suma % 11);

        dv = (dv == 'K') ? 10 : dv;
        dv = (dv == 0) ? 11 : dv;

        if (dvEsperado != dv) { rut.setCustomValidity("RUT Inválido"); return false; }

        rut.setCustomValidity('');
    }
</script>